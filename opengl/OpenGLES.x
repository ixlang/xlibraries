//xlang Source, Name:OpenGLES.x 
//Date: Tue Mar 03:41:39 2021 

class OpenGLES{
    public static const int GL_GLES_PROTOTYPES = 1;
    public static const int GL_ES_VERSION_2_0 = 1;
    public static const int GL_DEPTH_BUFFER_BIT               = 0x00000100;
    public static const int GL_STENCIL_BUFFER_BIT             = 0x00000400;
    public static const int GL_COLOR_BUFFER_BIT               = 0x00004000;
    public static const int GL_FALSE                          = 0;
    public static const int GL_TRUE                           = 1;
    public static const int GL_POINTS                         = 0x0000;
    public static const int GL_LINES                          = 0x0001;
    public static const int GL_LINE_LOOP                      = 0x0002;
    public static const int GL_LINE_STRIP                     = 0x0003;
    public static const int GL_TRIANGLES                      = 0x0004;
    public static const int GL_TRIANGLE_STRIP                 = 0x0005;
    public static const int GL_TRIANGLE_FAN                   = 0x0006;
    public static const int GL_ZERO                           = 0;
    public static const int GL_ONE                            = 1;
    public static const int GL_SRC_COLOR                      = 0x0300;
    public static const int GL_ONE_MINUS_SRC_COLOR            = 0x0301;
    public static const int GL_SRC_ALPHA                      = 0x0302;
    public static const int GL_ONE_MINUS_SRC_ALPHA            = 0x0303;
    public static const int GL_DST_ALPHA                      = 0x0304;
    public static const int GL_ONE_MINUS_DST_ALPHA            = 0x0305;
    public static const int GL_DST_COLOR                      = 0x0306;
    public static const int GL_ONE_MINUS_DST_COLOR            = 0x0307;
    public static const int GL_SRC_ALPHA_SATURATE             = 0x0308;
    public static const int GL_FUNC_ADD                       = 0x8006;
    public static const int GL_BLEND_EQUATION                 = 0x8009;
    public static const int GL_BLEND_EQUATION_RGB             = 0x8009;
    public static const int GL_BLEND_EQUATION_ALPHA           = 0x883D;
    public static const int GL_FUNC_SUBTRACT                  = 0x800A;
    public static const int GL_FUNC_REVERSE_SUBTRACT          = 0x800B;
    public static const int GL_BLEND_DST_RGB                  = 0x80C8;
    public static const int GL_BLEND_SRC_RGB                  = 0x80C9;
    public static const int GL_BLEND_DST_ALPHA                = 0x80CA;
    public static const int GL_BLEND_SRC_ALPHA                = 0x80CB;
    public static const int GL_CONSTANT_COLOR                 = 0x8001;
    public static const int GL_ONE_MINUS_CONSTANT_COLOR       = 0x8002;
    public static const int GL_CONSTANT_ALPHA                 = 0x8003;
    public static const int GL_ONE_MINUS_CONSTANT_ALPHA       = 0x8004;
    public static const int GL_BLEND_COLOR                    = 0x8005;
    public static const int GL_ARRAY_BUFFER                   = 0x8892;
    public static const int GL_ELEMENT_ARRAY_BUFFER           = 0x8893;
    public static const int GL_ARRAY_BUFFER_BINDING           = 0x8894;
    public static const int GL_ELEMENT_ARRAY_BUFFER_BINDING   = 0x8895;
    public static const int GL_STREAM_DRAW                    = 0x88E0;
    public static const int GL_STATIC_DRAW                    = 0x88E4;
    public static const int GL_DYNAMIC_DRAW                   = 0x88E8;
    public static const int GL_BUFFER_SIZE                    = 0x8764;
    public static const int GL_BUFFER_USAGE                   = 0x8765;
    public static const int GL_CURRENT_VERTEX_ATTRIB          = 0x8626;
    public static const int GL_FRONT                          = 0x0404;
    public static const int GL_BACK                           = 0x0405;
    public static const int GL_FRONT_AND_BACK                 = 0x0408;
    public static const int GL_TEXTURE_2D                     = 0x0DE1;
    public static const int GL_CULL_FACE                      = 0x0B44;
    public static const int GL_BLEND                          = 0x0BE2;
    public static const int GL_DITHER                         = 0x0BD0;
    public static const int GL_STENCIL_TEST                   = 0x0B90;
    public static const int GL_DEPTH_TEST                     = 0x0B71;
    public static const int GL_SCISSOR_TEST                   = 0x0C11;
    public static const int GL_POLYGON_OFFSET_FILL            = 0x8037;
    public static const int GL_SAMPLE_ALPHA_TO_COVERAGE       = 0x809E;
    public static const int GL_SAMPLE_COVERAGE                = 0x80A0;
    public static const int GL_NO_ERROR                       = 0;
    public static const int GL_INVALID_ENUM                   = 0x0500;
    public static const int GL_INVALID_VALUE                  = 0x0501;
    public static const int GL_INVALID_OPERATION              = 0x0502;
    public static const int GL_OUT_OF_MEMORY                  = 0x0505;
    public static const int GL_CW                             = 0x0900;
    public static const int GL_CCW                            = 0x0901;
    public static const int GL_LINE_WIDTH                     = 0x0B21;
    public static const int GL_ALIASED_POINT_SIZE_RANGE       = 0x846D;
    public static const int GL_ALIASED_LINE_WIDTH_RANGE       = 0x846E;
    public static const int GL_CULL_FACE_MODE                 = 0x0B45;
    public static const int GL_FRONT_FACE                     = 0x0B46;
    public static const int GL_DEPTH_RANGE                    = 0x0B70;
    public static const int GL_DEPTH_WRITEMASK                = 0x0B72;
    public static const int GL_DEPTH_CLEAR_VALUE              = 0x0B73;
    public static const int GL_DEPTH_FUNC                     = 0x0B74;
    public static const int GL_STENCIL_CLEAR_VALUE            = 0x0B91;
    public static const int GL_STENCIL_FUNC                   = 0x0B92;
    public static const int GL_STENCIL_FAIL                   = 0x0B94;
    public static const int GL_STENCIL_PASS_DEPTH_FAIL        = 0x0B95;
    public static const int GL_STENCIL_PASS_DEPTH_PASS        = 0x0B96;
    public static const int GL_STENCIL_REF                    = 0x0B97;
    public static const int GL_STENCIL_VALUE_MASK             = 0x0B93;
    public static const int GL_STENCIL_WRITEMASK              = 0x0B98;
    public static const int GL_STENCIL_BACK_FUNC              = 0x8800;
    public static const int GL_STENCIL_BACK_FAIL              = 0x8801;
    public static const int GL_STENCIL_BACK_PASS_DEPTH_FAIL   = 0x8802;
    public static const int GL_STENCIL_BACK_PASS_DEPTH_PASS   = 0x8803;
    public static const int GL_STENCIL_BACK_REF               = 0x8CA3;
    public static const int GL_STENCIL_BACK_VALUE_MASK        = 0x8CA4;
    public static const int GL_STENCIL_BACK_WRITEMASK         = 0x8CA5;
    public static const int GL_VIEWPORT                       = 0x0BA2;
    public static const int GL_SCISSOR_BOX                    = 0x0C10;
    public static const int GL_COLOR_CLEAR_VALUE              = 0x0C22;
    public static const int GL_COLOR_WRITEMASK                = 0x0C23;
    public static const int GL_UNPACK_ALIGNMENT               = 0x0CF5;
    public static const int GL_PACK_ALIGNMENT                 = 0x0D05;
    public static const int GL_MAX_TEXTURE_SIZE               = 0x0D33;
    public static const int GL_MAX_VIEWPORT_DIMS              = 0x0D3A;
    public static const int GL_SUBPIXEL_BITS                  = 0x0D50;
    public static const int GL_RED_BITS                       = 0x0D52;
    public static const int GL_GREEN_BITS                     = 0x0D53;
    public static const int GL_BLUE_BITS                      = 0x0D54;
    public static const int GL_ALPHA_BITS                     = 0x0D55;
    public static const int GL_DEPTH_BITS                     = 0x0D56;
    public static const int GL_STENCIL_BITS                   = 0x0D57;
    public static const int GL_POLYGON_OFFSET_UNITS           = 0x2A00;
    public static const int GL_POLYGON_OFFSET_FACTOR          = 0x8038;
    public static const int GL_TEXTURE_BINDING_2D             = 0x8069;
    public static const int GL_SAMPLE_BUFFERS                 = 0x80A8;
    public static const int GL_SAMPLES                        = 0x80A9;
    public static const int GL_SAMPLE_COVERAGE_VALUE          = 0x80AA;
    public static const int GL_SAMPLE_COVERAGE_INVERT         = 0x80AB;
    public static const int GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
    public static const int GL_COMPRESSED_TEXTURE_FORMATS     = 0x86A3;
    public static const int GL_DONT_CARE                      = 0x1100;
    public static const int GL_FASTEST                        = 0x1101;
    public static const int GL_NICEST                         = 0x1102;
    public static const int GL_GENERATE_MIPMAP_HINT           = 0x8192;
    public static const int GL_BYTE                           = 0x1400;
    public static const int GL_UNSIGNED_BYTE                  = 0x1401;
    public static const int GL_SHORT                          = 0x1402;
    public static const int GL_UNSIGNED_SHORT                 = 0x1403;
    public static const int GL_INT                            = 0x1404;
    public static const int GL_UNSIGNED_INT                   = 0x1405;
    public static const int GL_FLOAT                          = 0x1406;
    public static const int GL_FIXED                          = 0x140C;
    public static const int GL_DEPTH_COMPONENT                = 0x1902;
    public static const int GL_ALPHA                          = 0x1906;
    public static const int GL_RGB                            = 0x1907;
    public static const int GL_RGBA                           = 0x1908;
    public static const int GL_LUMINANCE                      = 0x1909;
    public static const int GL_LUMINANCE_ALPHA                = 0x190A;
    public static const int GL_UNSIGNED_SHORT_4_4_4_4         = 0x8033;
    public static const int GL_UNSIGNED_SHORT_5_5_5_1         = 0x8034;
    public static const int GL_UNSIGNED_SHORT_5_6_5           = 0x8363;
    public static const int GL_FRAGMENT_SHADER                = 0x8B30;
    public static const int GL_VERTEX_SHADER                  = 0x8B31;
    public static const int GL_MAX_VERTEX_ATTRIBS             = 0x8869;
    public static const int GL_MAX_VERTEX_UNIFORM_VECTORS     = 0x8DFB;
    public static const int GL_MAX_VARYING_VECTORS            = 0x8DFC;
    public static const int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
    public static const int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
    public static const int GL_MAX_TEXTURE_IMAGE_UNITS        = 0x8872;
    public static const int GL_MAX_FRAGMENT_UNIFORM_VECTORS   = 0x8DFD;
    public static const int GL_SHADER_TYPE                    = 0x8B4F;
    public static const int GL_DELETE_STATUS                  = 0x8B80;
    public static const int GL_LINK_STATUS                    = 0x8B82;
    public static const int GL_VALIDATE_STATUS                = 0x8B83;
    public static const int GL_ATTACHED_SHADERS               = 0x8B85;
    public static const int GL_ACTIVE_UNIFORMS                = 0x8B86;
    public static const int GL_ACTIVE_UNIFORM_MAX_LENGTH      = 0x8B87;
    public static const int GL_ACTIVE_ATTRIBUTES              = 0x8B89;
    public static const int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH    = 0x8B8A;
    public static const int GL_SHADING_LANGUAGE_VERSION       = 0x8B8C;
    public static const int GL_CURRENT_PROGRAM                = 0x8B8D;
    public static const int GL_NEVER                          = 0x0200;
    public static const int GL_LESS                           = 0x0201;
    public static const int GL_EQUAL                          = 0x0202;
    public static const int GL_LEQUAL                         = 0x0203;
    public static const int GL_GREATER                        = 0x0204;
    public static const int GL_NOTEQUAL                       = 0x0205;
    public static const int GL_GEQUAL                         = 0x0206;
    public static const int GL_ALWAYS                         = 0x0207;
    public static const int GL_KEEP                           = 0x1E00;
    public static const int GL_REPLACE                        = 0x1E01;
    public static const int GL_INCR                           = 0x1E02;
    public static const int GL_DECR                           = 0x1E03;
    public static const int GL_INVERT                         = 0x150A;
    public static const int GL_INCR_WRAP                      = 0x8507;
    public static const int GL_DECR_WRAP                      = 0x8508;
    public static const int GL_VENDOR                         = 0x1F00;
    public static const int GL_RENDERER                       = 0x1F01;
    public static const int GL_VERSION                        = 0x1F02;
    public static const int GL_EXTENSIONS                     = 0x1F03;
    public static const int GL_NEAREST                        = 0x2600;
    public static const int GL_LINEAR                         = 0x2601;
    public static const int GL_NEAREST_MIPMAP_NEAREST         = 0x2700;
    public static const int GL_LINEAR_MIPMAP_NEAREST          = 0x2701;
    public static const int GL_NEAREST_MIPMAP_LINEAR          = 0x2702;
    public static const int GL_LINEAR_MIPMAP_LINEAR           = 0x2703;
    public static const int GL_TEXTURE_MAG_FILTER             = 0x2800;
    public static const int GL_TEXTURE_MIN_FILTER             = 0x2801;
    public static const int GL_TEXTURE_WRAP_S                 = 0x2802;
    public static const int GL_TEXTURE_WRAP_T                 = 0x2803;
    public static const int GL_TEXTURE                        = 0x1702;
    public static const int GL_TEXTURE_CUBE_MAP               = 0x8513;
    public static const int GL_TEXTURE_BINDING_CUBE_MAP       = 0x8514;
    public static const int GL_TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;
    public static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;
    public static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;
    public static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;
    public static const int GL_TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;
    public static const int GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851A;
    public static const int GL_MAX_CUBE_MAP_TEXTURE_SIZE      = 0x851C;
    public static const int GL_TEXTURE0                       = 0x84C0;
    public static const int GL_TEXTURE1                       = 0x84C1;
    public static const int GL_TEXTURE2                       = 0x84C2;
    public static const int GL_TEXTURE3                       = 0x84C3;
    public static const int GL_TEXTURE4                       = 0x84C4;
    public static const int GL_TEXTURE5                       = 0x84C5;
    public static const int GL_TEXTURE6                       = 0x84C6;
    public static const int GL_TEXTURE7                       = 0x84C7;
    public static const int GL_TEXTURE8                       = 0x84C8;
    public static const int GL_TEXTURE9                       = 0x84C9;
    public static const int GL_TEXTURE10                      = 0x84CA;
    public static const int GL_TEXTURE11                      = 0x84CB;
    public static const int GL_TEXTURE12                      = 0x84CC;
    public static const int GL_TEXTURE13                      = 0x84CD;
    public static const int GL_TEXTURE14                      = 0x84CE;
    public static const int GL_TEXTURE15                      = 0x84CF;
    public static const int GL_TEXTURE16                      = 0x84D0;
    public static const int GL_TEXTURE17                      = 0x84D1;
    public static const int GL_TEXTURE18                      = 0x84D2;
    public static const int GL_TEXTURE19                      = 0x84D3;
    public static const int GL_TEXTURE20                      = 0x84D4;
    public static const int GL_TEXTURE21                      = 0x84D5;
    public static const int GL_TEXTURE22                      = 0x84D6;
    public static const int GL_TEXTURE23                      = 0x84D7;
    public static const int GL_TEXTURE24                      = 0x84D8;
    public static const int GL_TEXTURE25                      = 0x84D9;
    public static const int GL_TEXTURE26                      = 0x84DA;
    public static const int GL_TEXTURE27                      = 0x84DB;
    public static const int GL_TEXTURE28                      = 0x84DC;
    public static const int GL_TEXTURE29                      = 0x84DD;
    public static const int GL_TEXTURE30                      = 0x84DE;
    public static const int GL_TEXTURE31                      = 0x84DF;
    public static const int GL_ACTIVE_TEXTURE                 = 0x84E0;
    public static const int GL_REPEAT                         = 0x2901;
    public static const int GL_CLAMP_TO_EDGE                  = 0x812F;
    public static const int GL_MIRRORED_REPEAT                = 0x8370;
    public static const int GL_FLOAT_VEC2                     = 0x8B50;
    public static const int GL_FLOAT_VEC3                     = 0x8B51;
    public static const int GL_FLOAT_VEC4                     = 0x8B52;
    public static const int GL_INT_VEC2                       = 0x8B53;
    public static const int GL_INT_VEC3                       = 0x8B54;
    public static const int GL_INT_VEC4                       = 0x8B55;
    public static const int GL_BOOL                           = 0x8B56;
    public static const int GL_BOOL_VEC2                      = 0x8B57;
    public static const int GL_BOOL_VEC3                      = 0x8B58;
    public static const int GL_BOOL_VEC4                      = 0x8B59;
    public static const int GL_FLOAT_MAT2                     = 0x8B5A;
    public static const int GL_FLOAT_MAT3                     = 0x8B5B;
    public static const int GL_FLOAT_MAT4                     = 0x8B5C;
    public static const int GL_SAMPLER_2D                     = 0x8B5E;
    public static const int GL_SAMPLER_CUBE                   = 0x8B60;
    public static const int GL_VERTEX_ATTRIB_ARRAY_ENABLED    = 0x8622;
    public static const int GL_VERTEX_ATTRIB_ARRAY_SIZE       = 0x8623;
    public static const int GL_VERTEX_ATTRIB_ARRAY_STRIDE     = 0x8624;
    public static const int GL_VERTEX_ATTRIB_ARRAY_TYPE       = 0x8625;
    public static const int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
    public static const int GL_VERTEX_ATTRIB_ARRAY_POINTER    = 0x8645;
    public static const int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
    public static const int GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;
    public static const int GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;
    public static const int GL_COMPILE_STATUS                 = 0x8B81;
    public static const int GL_INFO_LOG_LENGTH                = 0x8B84;
    public static const int GL_SHADER_SOURCE_LENGTH           = 0x8B88;
    public static const int GL_SHADER_COMPILER                = 0x8DFA;
    public static const int GL_SHADER_BINARY_FORMATS          = 0x8DF8;
    public static const int GL_NUM_SHADER_BINARY_FORMATS      = 0x8DF9;
    public static const int GL_LOW_FLOAT                      = 0x8DF0;
    public static const int GL_MEDIUM_FLOAT                   = 0x8DF1;
    public static const int GL_HIGH_FLOAT                     = 0x8DF2;
    public static const int GL_LOW_INT                        = 0x8DF3;
    public static const int GL_MEDIUM_INT                     = 0x8DF4;
    public static const int GL_HIGH_INT                       = 0x8DF5;
    public static const int GL_FRAMEBUFFER                    = 0x8D40;
    public static const int GL_RENDERBUFFER                   = 0x8D41;
    public static const int GL_RGBA4                          = 0x8056;
    public static const int GL_RGB5_A1                        = 0x8057;
    public static const int GL_RGB565                         = 0x8D62;
    public static const int GL_DEPTH_COMPONENT16              = 0x81A5;
    public static const int GL_STENCIL_INDEX8                 = 0x8D48;
    public static const int GL_RENDERBUFFER_WIDTH             = 0x8D42;
    public static const int GL_RENDERBUFFER_HEIGHT            = 0x8D43;
    public static const int GL_RENDERBUFFER_INTERNAL_FORMAT   = 0x8D44;
    public static const int GL_RENDERBUFFER_RED_SIZE          = 0x8D50;
    public static const int GL_RENDERBUFFER_GREEN_SIZE        = 0x8D51;
    public static const int GL_RENDERBUFFER_BLUE_SIZE         = 0x8D52;
    public static const int GL_RENDERBUFFER_ALPHA_SIZE        = 0x8D53;
    public static const int GL_RENDERBUFFER_DEPTH_SIZE        = 0x8D54;
    public static const int GL_RENDERBUFFER_STENCIL_SIZE      = 0x8D55;
    public static const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;
    public static const int GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;
    public static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;
    public static const int GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;
    public static const int GL_COLOR_ATTACHMENT0              = 0x8CE0;
    public static const int GL_DEPTH_ATTACHMENT               = 0x8D00;
    public static const int GL_STENCIL_ATTACHMENT             = 0x8D20;
    public static const int GL_NONE                           = 0;
    public static const int GL_FRAMEBUFFER_COMPLETE           = 0x8CD5;
    public static const int GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
    public static const int GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
    public static const int GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9;
    public static const int GL_FRAMEBUFFER_UNSUPPORTED        = 0x8CDD;
    public static const int GL_FRAMEBUFFER_BINDING            = 0x8CA6;
    public static const int GL_RENDERBUFFER_BINDING           = 0x8CA7;
    public static const int GL_MAX_RENDERBUFFER_SIZE          = 0x84E8;
    public static const int GL_INVALID_FRAMEBUFFER_OPERATION  = 0x0506;

    import {
        void stdcall glActiveTexture (int texture);
        void stdcall glAttachShader (int program, int shader);
        void stdcall glBindAttribLocation (int program, int index, byte *name);
        void stdcall glBindBuffer (int target, int buffer);
        void stdcall glBindFramebuffer (int target, int framebuffer);
        void stdcall glBindRenderbuffer (int target, int renderbuffer);
        void stdcall glBindTexture (int target, int texture);
        void stdcall glBlendColor (float red, float green, float blue, float alpha);
        void stdcall glBlendEquation (int mode);
        void stdcall glBlendEquationSeparate (int modeRGB, int modeAlpha);
        void stdcall glBlendFunc (int sfactor, int dfactor);
        void stdcall glBlendFuncSeparate (int sfactorRGB, int dfactorRGB, int sfactorAlpha, int dfactorAlpha);
        void stdcall glBufferData (int target, Pointer size, ObjectPtr data, int usage);
        void stdcall glBufferSubData (int target, Pointer offset, Pointer size, ObjectPtr data);
        int stdcall glCheckFramebufferStatus (int target);
        void stdcall glClear (int mask);
        void stdcall glClearColor (float red, float green, float blue, float alpha);
        void stdcall glClearDepthf (float d);
        void stdcall glClearStencil (int s);
        void stdcall glColorMask (bool red, bool green, bool blue, bool alpha);
        void stdcall glCompileShader (int shader);
        void stdcall glCompressedTexImage2D (int target, int level, int internalformat, int width, int height, int border, int imageSize, ObjectPtr data);
        void stdcall glCompressedTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int imageSize, ObjectPtr data);
        void stdcall glCopyTexImage2D (int target, int level, int internalformat, int x, int y, int width, int height, int border);
        void stdcall glCopyTexSubImage2D (int target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
        int stdcall glCreateProgram (void);
        int stdcall glCreateShader (int type);
        void stdcall glCullFace (int mode);
        void stdcall glDeleteBuffers (int n, int *buffers);
        void stdcall glDeleteFramebuffers (int n, int *framebuffers);
        void stdcall glDeleteProgram (int program);
        void stdcall glDeleteRenderbuffers (int n, int *renderbuffers);
        void stdcall glDeleteShader (int shader);
        void stdcall glDeleteTextures (int n, int *textures);
        void stdcall glDepthFunc (int func);
        void stdcall glDepthMask (bool flag);
        void stdcall glDepthRangef (float n, float f);
        void stdcall glDetachShader (int program, int shader);
        void stdcall glDisable (int cap);
        void stdcall glDisableVertexAttribArray (int index);
        void stdcall glDrawArrays (int mode, int first, int count);
        void stdcall glDrawElements (int mode, int count, int type, ObjectPtr indices);
        void stdcall glEnable (int cap);
        void stdcall glEnableVertexAttribArray (int index);
        void stdcall glFinish (void);
        void stdcall glFlush (void);
        void stdcall glFramebufferRenderbuffer (int target, int attachment, int renderbuffertarget, int renderbuffer);
        void stdcall glFramebufferTexture2D (int target, int attachment, int textarget, int texture, int level);
        void stdcall glFrontFace (int mode);
        void stdcall glGenBuffers (int n, int *buffers);
        void stdcall glGenerateMipmap (int target);
        void stdcall glGenFramebuffers (int n, int *framebuffers);
        void stdcall glGenRenderbuffers (int n, int *renderbuffers);
        void stdcall glGenTextures (int n, int *textures);
        void stdcall glGetActiveAttrib (int program, int index, int bufSize, int *length, int *size, int *type, byte *name);
        void stdcall glGetActiveUniform (int program, int index, int bufSize, int *length, int *size, int *type, byte *name);
        void stdcall glGetAttachedShaders (int program, int maxCount, int *count, int *shaders);
        int stdcall glGetAttribLocation (int program, byte *name);
        void stdcall glGetBooleanv (int pname, bool *data);
        void stdcall glGetBufferParameteriv (int target, int pname, int *params);
        int stdcall glGetError (void);
        void stdcall glGetFloatv (int pname, float *data);
        void stdcall glGetFramebufferAttachmentParameteriv (int target, int attachment, int pname, int *params);
        void stdcall glGetIntegerv (int pname, int *data);
        void stdcall glGetProgramiv (int program, int pname, int *params);
        void stdcall glGetProgramInfoLog (int program, int bufSize, int *length, byte *infoLog);
        void stdcall glGetRenderbufferParameteriv (int target, int pname, int *params);
        void stdcall glGetShaderiv (int shader, int pname, int *params);
        void stdcall glGetShaderInfoLog (int shader, int bufSize, int *length, byte *infoLog);
        void stdcall glGetShaderPrecisionFormat (int shadertype, int precisiontype, int *range, int *precision);
        void stdcall glGetShaderSource (int shader, int bufSize, int *length, byte *source);
        String stdcall glGetString (int name);
        void stdcall glGetTexParameterfv (int target, int pname, float *params);
        void stdcall glGetTexParameteriv (int target, int pname, int *params);
        void stdcall glGetUniformfv (int program, int location, float *params);
        void stdcall glGetUniformiv (int program, int location, int *params);
        int stdcall glGetUniformLocation (int program, byte *name);
        void stdcall glGetVertexAttribfv (int index, int pname, float *params);
        void stdcall glGetVertexAttribiv (int index, int pname, int *params);
        void stdcall glGetVertexAttribPointerv (int index, int pname, ObjectPtr pointer);
        void stdcall glHint (int target, int mode);
        bool stdcall glIsBuffer (int buffer);
        bool stdcall glIsEnabled (int cap);
        bool stdcall glIsFramebuffer (int framebuffer);
        bool stdcall glIsProgram (int program);
        bool stdcall glIsRenderbuffer (int renderbuffer);
        bool stdcall glIsShader (int shader);
        bool stdcall glIsTexture (int texture);
        void stdcall glLineWidth (float width);
        void stdcall glLinkProgram (int program);
        void stdcall glPixelStorei (int pname, int param);
        void stdcall glPolygonOffset (float factor, float units);
        void stdcall glReadPixels (int x, int y, int width, int height, int format, int type, ObjectPtr pixels);
        void stdcall glReleaseShaderCompiler (void);
        void stdcall glRenderbufferStorage (int target, int internalformat, int width, int height);
        void stdcall glSampleCoverage (float value, bool invert);
        void stdcall glScissor (int x, int y, int width, int height);
        void stdcall glShaderBinary (int count, int *shaders, int binaryformat, ObjectPtr binary, int length);
        void stdcall glShaderSource (int shader, int count, byte *string, int *length);
        void stdcall glStencilFunc (int func, int ref, int mask);
        void stdcall glStencilFuncSeparate (int face, int func, int ref, int mask);
        void stdcall glStencilMask (int mask);
        void stdcall glStencilMaskSeparate (int face, int mask);
        void stdcall glStencilOp (int fail, int zfail, int zpass);
        void stdcall glStencilOpSeparate (int face, int sfail, int dpfail, int dppass);
        void stdcall glTexImage2D (int target, int level, int internalformat, int width, int height, int border, int format, int type, ObjectPtr pixels);
        void stdcall glTexParameterf (int target, int pname, float param);
        void stdcall glTexParameterfv (int target, int pname, float *params);
        void stdcall glTexParameteri (int target, int pname, int param);
        void stdcall glTexParameteriv (int target, int pname, int *params);
        void stdcall glTexSubImage2D (int target, int level, int xoffset, int yoffset, int width, int height, int format, int type, ObjectPtr pixels);
        void stdcall glUniform1f (int location, float v0);
        void stdcall glUniform1fv (int location, int count, float *value);
        void stdcall glUniform1i (int location, int v0);
        void stdcall glUniform1iv (int location, int count, int *value);
        void stdcall glUniform2f (int location, float v0, float v1);
        void stdcall glUniform2fv (int location, int count, float *value);
        void stdcall glUniform2i (int location, int v0, int v1);
        void stdcall glUniform2iv (int location, int count, int *value);
        void stdcall glUniform3f (int location, float v0, float v1, float v2);
        void stdcall glUniform3fv (int location, int count, float *value);
        void stdcall glUniform3i (int location, int v0, int v1, int v2);
        void stdcall glUniform3iv (int location, int count, int *value);
        void stdcall glUniform4f (int location, float v0, float v1, float v2, float v3);
        void stdcall glUniform4fv (int location, int count, float *value);
        void stdcall glUniform4i (int location, int v0, int v1, int v2, int v3);
        void stdcall glUniform4iv (int location, int count, int *value);
        void stdcall glUniformMatrix2fv (int location, int count, bool transpose, float *value);
        void stdcall glUniformMatrix3fv (int location, int count, bool transpose, float *value);
        void stdcall glUniformMatrix4fv (int location, int count, bool transpose, float *value);
        void stdcall glUseProgram (int program);
        void stdcall glValidateProgram (int program);
        void stdcall glVertexAttrib1f (int index, float x);
        void stdcall glVertexAttrib1fv (int index, float *v);
        void stdcall glVertexAttrib2f (int index, float x, float y);
        void stdcall glVertexAttrib2fv (int index, float *v);
        void stdcall glVertexAttrib3f (int index, float x, float y, float z);
        void stdcall glVertexAttrib3fv (int index, float *v);
        void stdcall glVertexAttrib4f (int index, float x, float y, float z, float w);
        void stdcall glVertexAttrib4fv (int index, float *v);
        void stdcall glVertexAttribPointer (int index, int size, int type, bool normalized, int stride, ObjectPtr pointer);
        void stdcall glViewport (int x, int y, int width, int height);
    };
};